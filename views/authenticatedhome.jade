extends layout
block headcontent

    script(src='//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js')
    script(src='/socket.io/socket.io.js')
    script.

        var audioElement = document.createElement('audio');

    script.

        audioElement.setAttribute('autoplay', 'autoplay');

    script.

        //audioElement.load()

    script.

        var socket = io.connect(window.location.href);

    script.

        var myId = Math.floor((Math.random() * 100) + 1);

    script.

        $(document).ready(function() {

          $.get();


          socket.on('greet', function (data) {
            console.log(data);
            socket.emit('respond', { message: 'Hello to you too, Mr.Server!' });
          });

          socket.on('message', function (data) {
            console.log(data);

            var msg = data.message.split(' ').join('+');

            var s = document.createElement("script");
            s.src = "http://api.microsofttranslator.com/V2/Ajax.svc/Translate" +
                "?appId=Bearer " + encodeURIComponent(data.token) +
                "&from=" + encodeURIComponent(data.lang) +
                "&to=" + encodeURIComponent('fr') +
                "&text=" + encodeURIComponent(msg) +
                "&oncomplete=mycallback";
            document.body.appendChild(s);


          });
        });

    script.

       function mycallback(translateddata)
                 {
                     console.log(translateddata);
                     // show the translation result to the user

                     if(translateddata != null) {
                       var msgTranslated = translateddata.split('+').join('').split('  ').join(' ').split(' ').join('+');
                       audioElement.setAttribute('src', 'http://translate.google.com/translate_tts?tl=fr&q=' + msgTranslated);
                       audioElement.play();
                       //chrome.tts.speak(msgTranslated);
                     }
                 }

block content
  #main.browser-landing
    #marquee.compact.marquee-stacked
      .marquee-copy
        h1
          a.c1(href='http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html')
            | Web
            | Speech API
          | Demonstration
    .compact.marquee
      #info
        p#info_start
          | Click on the microphone icon and begin speaking for as long as you like.
        p#info_speak_now(style='display:none')
          | Speak now.
        p#info_no_speech(style='display:none')
          | No speech was detected. You may need to adjust your
          a(href='//support.google.com/chrome/bin/answer.py?hl=en&answer=1407892')
            | microphone
            | settings
          | .
        p#info_no_microphone(style='display:none')
          | No microphone was found. Ensure that a microphone is installed and that
          a(href='//support.google.com/chrome/bin/answer.py?hl=en&answer=1407892')
            | microphone settings
          | are configured correctly.
        p#info_allow(style='display:none')
          | Click the "Allow" button above to enable your microphone.
        p#info_denied(style='display:none')
          | Permission to use microphone was denied.
        p#info_blocked(style='display:none')
          | Permission to use microphone is blocked. To change, go to
          | chrome://settings/contentExceptions#media-stream
        p#info_upgrade(style='display:none')
          | Web Speech API is not supported by this browser. Upgrade to
          a(href='//www.google.com/chrome') Chrome
          | version 25 or later.
      #div_start
        button#start_button(onclick='startButton(event)')
          img#start_img(alt='Start', src='//google.com/intl/en/chrome/assets/common/images/content/mic.gif')
      #results
        span#final_span.final
        span#interim_span.interim
      #div_language.compact.marquee
        select#select_language(onchange='updateCountry()')
        select#select_dialect





    script.

       //////////// Languages
       var langs =
       [['Afrikaans',       ['af-ZA']],
        ['Bahasa Indonesia',['id-ID']],
        ['Bahasa Melayu',   ['ms-MY']],
        ['Català',          ['ca-ES']],
        ['Čeština',         ['cs-CZ']],
        ['Deutsch',         ['de-DE']],
        ['English',         ['en-AU', 'Australia'],
                            ['en-CA', 'Canada'],
                            ['en-IN', 'India'],
                            ['en-NZ', 'New Zealand'],
                            ['en-ZA', 'South Africa'],
                            ['en-GB', 'United Kingdom'],
                            ['en-US', 'United States']],
        ['Español',         ['es-AR', 'Argentina'],
                            ['es-BO', 'Bolivia'],
                            ['es-CL', 'Chile'],
                            ['es-CO', 'Colombia'],
                            ['es-CR', 'Costa Rica'],
                            ['es-EC', 'Ecuador'],
                            ['es-SV', 'El Salvador'],
                            ['es-ES', 'España'],
                            ['es-US', 'Estados Unidos'],
                            ['es-GT', 'Guatemala'],
                            ['es-HN', 'Honduras'],
                            ['es-MX', 'México'],
                            ['es-NI', 'Nicaragua'],
                            ['es-PA', 'Panamá'],
                            ['es-PY', 'Paraguay'],
                            ['es-PE', 'Perú'],
                            ['es-PR', 'Puerto Rico'],
                            ['es-DO', 'República Dominicana'],
                            ['es-UY', 'Uruguay'],
                            ['es-VE', 'Venezuela']],
        ['Euskara',         ['eu-ES']],
        ['Français',        ['fr-FR']],
        ['Galego',          ['gl-ES']],
        ['Hrvatski',        ['hr_HR']],
        ['IsiZulu',         ['zu-ZA']],
        ['Íslenska',        ['is-IS']],
        ['Italiano',        ['it-IT', 'Italia'],
                            ['it-CH', 'Svizzera']],
        ['Magyar',          ['hu-HU']],
        ['Nederlands',      ['nl-NL']],
        ['Norsk bokmål',    ['nb-NO']],
        ['Polski',          ['pl-PL']],
        ['Português',       ['pt-BR', 'Brasil'],
                            ['pt-PT', 'Portugal']],
        ['Română',          ['ro-RO']],
        ['Slovenčina',      ['sk-SK']],
        ['Suomi',           ['fi-FI']],
        ['Svenska',         ['sv-SE']],
        ['Türkçe',          ['tr-TR']],
        ['български',       ['bg-BG']],
        ['Pусский',         ['ru-RU']],
        ['Српски',          ['sr-RS']],
        ['한국어',            ['ko-KR']],
        ['日本語',           ['ja-JP']],
        ['Lingua latīna',   ['la']]];

       for (var i = 0; i < langs.length; i++) {
         select_language.options[i] = new Option(langs[i][0], i);
       }
       select_language.selectedIndex = 6;
       updateCountry();
       select_dialect.selectedIndex = 6;
       showInfo('info_start');

       function updateCountry() {
         for (var i = select_dialect.options.length - 1; i >= 0; i--) {
           select_dialect.remove(i);
         }
         var list = langs[select_language.selectedIndex];
         for (var i = 1; i < list.length; i++) {
           select_dialect.options.add(new Option(list[i][1], list[i][0]));
         }
         select_dialect.style.visibility = list[1].length == 1 ? 'hidden' : 'visible';
       }

       var final_transcript = '';
       var recognizing = false;
       var ignore_onend;
       var start_timestamp;
       if (!('webkitSpeechRecognition' in window)) {
         upgrade();
       } else {
         start_button.style.display = 'inline-block';
         var recognition = new webkitSpeechRecognition();
         recognition.continuous = true;
         recognition.interimResults = true;

         recognition.onstart = function() {
           recognizing = true;
           showInfo('info_speak_now');
           start_img.src = '//google.com/intl/en/chrome/assets/common/images/content/mic-animate.gif';
         };

         recognition.onerror = function(event) {
           if (event.error == 'no-speech') {
             start_img.src = '//google.com/intl/en/chrome/assets/common/images/content/mic.gif';
             showInfo('info_no_speech');
             ignore_onend = true;
           }
           if (event.error == 'audio-capture') {
             start_img.src = '//google.com/intl/en/chrome/assets/common/images/content/mic.gif';
             showInfo('info_no_microphone');
             ignore_onend = true;
           }
           if (event.error == 'not-allowed') {
             if (event.timeStamp - start_timestamp < 100) {
               showInfo('info_blocked');
             } else {
               showInfo('info_denied');
             }
             ignore_onend = true;
           }
         };

         recognition.onend = function() {
           recognizing = false;
           if (ignore_onend) {
             return;
           }
           start_img.src = '//google.com/intl/en/chrome/assets/common/images/content/mic.gif';
           if (!final_transcript) {
             showInfo('info_start');
             return;
           }
           showInfo('');
           if (window.getSelection) {
             window.getSelection().removeAllRanges();
             var range = document.createRange();
             range.selectNode(document.getElementById('final_span'));
             window.getSelection().addRange(range);
           }
           if (create_email) {
             create_email = false;
             createEmail();
           }
         };

         recognition.onresult = function(event) {
           var interim_transcript = '';
           if (typeof(event.results) == 'undefined') {
             recognition.onend = null;
             recognition.stop();
             upgrade();
             return;
           }
           for (var i = event.resultIndex; i < event.results.length; ++i) {
             if (event.results[i].isFinal) {
               final_transcript += event.results[i][0].transcript;
             } else {
               interim_transcript += event.results[i][0].transcript;
             }
           }
           final_transcript = capitalize(final_transcript);
           final_span.innerHTML = linebreak(final_transcript);

           var langToMsg = select_dialect.value.split('-')[0];
           socket.emit('message', { message: final_span.innerHTML, id: myId, lang: langToMsg});

           final_span.innerHTML = '';

           interim_span.innerHTML = linebreak(interim_transcript);
         };
       }

       function upgrade() {
         start_button.style.visibility = 'hidden';
         showInfo('info_upgrade');
       }

       var two_line = /\n\n/g;
       var one_line = /\n/g;
       function linebreak(s) {
         return s.replace(two_line, '<p></p>').replace(one_line, '<br>');
       }

       var first_char = /\S/;
       function capitalize(s) {
         return s.replace(first_char, function(m) { return m.toUpperCase(); });
       }

       function createEmail() {
         var n = final_transcript.indexOf('\n');
         if (n < 0 || n >= 80) {
           n = 40 + final_transcript.substring(40).indexOf(' ');
         }
         var subject = encodeURI(final_transcript.substring(0, n));
         var body = encodeURI(final_transcript.substring(n + 1));
         window.location.href = 'mailto:?subject=' + subject + '&body=' + body;
       }

       function startButton(event) {
         if (recognizing) {
           recognition.stop();
           return;
         }
         final_transcript = '';
         recognition.lang = select_dialect.value;
         recognition.start();
         ignore_onend = false;
         final_span.innerHTML = '';
         interim_span.innerHTML = '';
         start_img.src = '//google.com/intl/en/chrome/assets/common/images/content/mic-slash.gif';
         showInfo('info_allow');
         start_timestamp = event.timeStamp;
       }

       function showInfo(s) {
         if (s) {
           for (var child = info.firstChild; child; child = child.nextSibling) {
             if (child.style) {
               child.style.display = child.id == s ? 'inline' : 'none';
             }
           }
           info.style.visibility = 'visible';
         } else {
           info.style.visibility = 'hidden';
         }
       }